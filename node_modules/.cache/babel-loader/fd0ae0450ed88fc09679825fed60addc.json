{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/Udemy-React-Complete-Guide/redux--assignment-2-problem/src/containers/Persons.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Person from '../components/Person/Person';\nimport AddPerson from '../components/AddPerson/AddPerson';\nimport * as actionTypes from '../store/actions';\n\nclass Persons extends Component {\n  // state = {\n  //     persons: []\n  // }\n  // personAddedHandler = () => {\n  //     const newPerson = {\n  //         id: Math.random(), // not really unique but good enough here!\n  //         name: 'Max',\n  //         age: Math.floor( Math.random() * 40 )\n  //     }\n  //     this.setState( ( prevState ) => {\n  //         return { persons: prevState.persons.concat(newPerson)}\n  //     } );\n  // }\n  //\n  // personDeletedHandler = (personId) => {\n  //     this.setState( ( prevState ) => {\n  //         return { persons: prevState.persons.filter(person => person.id !== personId)}\n  //     } );\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AddPerson, {\n      personAdded: this.props.onAddPerson,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), this.props.persons.map(person => /*#__PURE__*/React.createElement(Person, {\n      key: person.id,\n      name: person.name,\n      age: person.age,\n      clicked: () => this.props.onDeletedPerson(person.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state.persons);\n  return {\n    persons: state.persons\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddPerson: () => dispatch({\n      type: actionTypes.ADD_PERSON\n    }),\n    onDeletedPerson: id => dispatch({\n      type: actionTypes.DELETE_PERSON,\n      personElementId: id\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);","map":{"version":3,"sources":["/Users/student/Desktop/Udemy-React-Complete-Guide/redux--assignment-2-problem/src/containers/Persons.js"],"names":["React","Component","connect","Person","AddPerson","actionTypes","Persons","render","props","onAddPerson","persons","map","person","id","name","age","onDeletedPerson","mapStateToProps","state","console","log","mapDispatchToProps","dispatch","type","ADD_PERSON","DELETE_PERSON","personElementId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAC5B;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAM,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKD,KAAL,CAAWE,OAAX,CAAmBC,GAAnB,CAAuBC,MAAM,iBAC1B,oBAAC,MAAD;AACI,MAAA,GAAG,EAAEA,MAAM,CAACC,EADhB;AAEI,MAAA,IAAI,EAAED,MAAM,CAACE,IAFjB;AAGI,MAAA,GAAG,EAAEF,MAAM,CAACG,GAHhB;AAII,MAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAWQ,eAAX,CAA2BJ,MAAM,CAACC,EAAlC,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAFL,CADJ;AAYH;;AAnC2B;;AAsChC,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACR,OAAlB;AACA,SAAO;AACLA,IAAAA,OAAO,EAAEQ,KAAK,CAACR;AADV,GAAP;AAGD,CALD;;AAOA,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLb,IAAAA,WAAW,EAAE,MAAMa,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAElB,WAAW,CAACmB;AAAnB,KAAD,CADtB;AAELR,IAAAA,eAAe,EAAGH,EAAD,IAAQS,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAElB,WAAW,CAACoB,aAAnB;AAAkCC,MAAAA,eAAe,EAAEb;AAAnD,KAAD;AAF5B,GAAP;AAID,CALD;;AAOA,eAAeX,OAAO,CAACe,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cf,OAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Person from '../components/Person/Person';\nimport AddPerson from '../components/AddPerson/AddPerson';\nimport * as actionTypes from '../store/actions';\n\nclass Persons extends Component {\n    // state = {\n    //     persons: []\n    // }\n\n    // personAddedHandler = () => {\n    //     const newPerson = {\n    //         id: Math.random(), // not really unique but good enough here!\n    //         name: 'Max',\n    //         age: Math.floor( Math.random() * 40 )\n    //     }\n    //     this.setState( ( prevState ) => {\n    //         return { persons: prevState.persons.concat(newPerson)}\n    //     } );\n    // }\n    //\n    // personDeletedHandler = (personId) => {\n    //     this.setState( ( prevState ) => {\n    //         return { persons: prevState.persons.filter(person => person.id !== personId)}\n    //     } );\n    // }\n\n    render () {\n        return (\n            <div>\n                <AddPerson personAdded={this.props.onAddPerson} />\n                {this.props.persons.map(person => (\n                    <Person\n                        key={person.id}\n                        name={person.name}\n                        age={person.age}\n                        clicked={() => this.props.onDeletedPerson(person.id)}/>\n                ))}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n  console.log(state.persons);\n  return {\n    persons: state.persons\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAddPerson: () => dispatch({type: actionTypes.ADD_PERSON}),\n    onDeletedPerson: (id) => dispatch({type: actionTypes.DELETE_PERSON, personElementId: id})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Persons);\n"]},"metadata":{},"sourceType":"module"}