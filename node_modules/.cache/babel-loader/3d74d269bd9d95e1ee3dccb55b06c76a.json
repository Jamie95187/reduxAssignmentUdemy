{"ast":null,"code":"import * as actionTypes from '../actions';\nconst initialState = {\n  persons: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_PERSON:\n      const newPerson = {\n        id: Math.random(),\n        // not really unique but good enough here!\n        name: action.personData.name,\n        age: action.personData.age\n      };\n      return { ...state,\n        persons: state.persons.concat(newPerson)\n      };\n\n    case actionTypes.DELETE_PERSON:\n      const updatedArray = state.persons.filter(person => person.id !== action.personElementId);\n      return {\n        persons: updatedArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/student/Desktop/Udemy-React-Complete-Guide/redux--assignment-2-problem/src/store/reducers/persons.js"],"names":["actionTypes","initialState","persons","reducer","state","action","type","ADD_PERSON","newPerson","id","Math","random","name","personData","age","concat","DELETE_PERSON","updatedArray","filter","person","personElementId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE;AADU,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAmC;AACjD,UAASA,MAAM,CAACC,IAAhB;AACE,SAAKN,WAAW,CAACO,UAAjB;AACE,YAAMC,SAAS,GAAG;AACdC,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADU;AACK;AACnBC,QAAAA,IAAI,EAAEP,MAAM,CAACQ,UAAP,CAAkBD,IAFV;AAGdE,QAAAA,GAAG,EAAET,MAAM,CAACQ,UAAP,CAAkBC;AAHT,OAAlB;AAKA,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAca,MAAd,CAAsBP,SAAtB;AAFJ,OAAP;;AAIF,SAAKR,WAAW,CAACgB,aAAjB;AACE,YAAMC,YAAY,GAAGb,KAAK,CAACF,OAAN,CAAcgB,MAAd,CAAqBC,MAAM,IAAIA,MAAM,CAACV,EAAP,KAAcJ,MAAM,CAACe,eAApD,CAArB;AACA,aAAO;AACLlB,QAAAA,OAAO,EAAEe;AADJ,OAAP;AAbJ;;AAiBA,SAAOb,KAAP;AACD,CAnBD;;AAqBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions';\n\nconst initialState = {\n  persons: []\n};\n\nconst reducer = (state = initialState, action ) => {\n  switch ( action.type ) {\n    case actionTypes.ADD_PERSON:\n      const newPerson = {\n          id: Math.random(), // not really unique but good enough here!\n          name: action.personData.name,\n          age: action.personData.age\n      };\n      return {\n        ...state,\n        persons: state.persons.concat( newPerson )\n      }\n    case actionTypes.DELETE_PERSON:\n      const updatedArray = state.persons.filter(person => person.id !== action.personElementId);\n      return {\n        persons: updatedArray\n      }\n    }\n  return state;\n}\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}